// This is the Prisma schema file for the Buy Me Coffee application
// Learn more about Prisma: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql" // You can change this to mysql, sqlite, sqlserver, etc.
  url      = env("DATABASE_URL")
}

model User {
  id                Int        @id @default(autoincrement())
  email             String     @unique
  password          String
  username          String     @unique
  profile           Profile?
  bankCard          BankCard?
  receivedDonations Donation[] @relation("ReceivedDonations")
  sentDonations     Donation[] @relation("SentDonations")
  createdAt         DateTime   @default(now())
  updatedAt         DateTime   @updatedAt
}

model BankCard {
  id         Int      @id @default(autoincrement())
  country    String
  firstName  String
  lastName   String
  cardNumber String
  expiryDate DateTime
  user       User     @relation(fields: [userId], references: [id], onDelete: Cascade)
  userId     Int      @unique
  createdAt  DateTime @default(now())
  updatedAt  DateTime @updatedAt
}

model Profile {
  id               Int      @id @default(autoincrement())
  name             String
  about            String?  @db.Text
  avatarImage      String?
  socialMediaURL   String?
  backgroundImage  String?
  successMessage   String?
  user             User     @relation(fields: [userId], references: [id], onDelete: Cascade)
  userId           Int      @unique
  createdAt        DateTime @default(now())
  updatedAt        DateTime @updatedAt
}

model Donation {
  id                     Int      @id @default(autoincrement())
  amount                 Int
  specialMessage         String?
  socialURLOrBuyMeACoffee String?
  donor                  User?    @relation("SentDonations", fields: [donorId], references: [id])
  donorId                Int?
  recipient              User     @relation("ReceivedDonations", fields: [recipientId], references: [id])
  recipientId            Int
  createdAt              DateTime @default(now())
  updatedAt              DateTime @updatedAt
}